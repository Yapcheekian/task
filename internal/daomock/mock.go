// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Yapcheekian/task/pkg/dao (interfaces: TaskDAO)
//
// Generated by this command:
//
//	mockgen -destination=mock.go -package=daomock github.com/Yapcheekian/task/pkg/dao TaskDAO
//

// Package daomock is a generated GoMock package.
package daomock

import (
	context "context"
	reflect "reflect"

	model "github.com/Yapcheekian/task/pkg/model"
	gomock "go.uber.org/mock/gomock"
)

// MockTaskDAO is a mock of TaskDAO interface.
type MockTaskDAO struct {
	ctrl     *gomock.Controller
	recorder *MockTaskDAOMockRecorder
}

// MockTaskDAOMockRecorder is the mock recorder for MockTaskDAO.
type MockTaskDAOMockRecorder struct {
	mock *MockTaskDAO
}

// NewMockTaskDAO creates a new mock instance.
func NewMockTaskDAO(ctrl *gomock.Controller) *MockTaskDAO {
	mock := &MockTaskDAO{ctrl: ctrl}
	mock.recorder = &MockTaskDAOMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTaskDAO) EXPECT() *MockTaskDAOMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockTaskDAO) Create(arg0 context.Context, arg1 *model.Task) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockTaskDAOMockRecorder) Create(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockTaskDAO)(nil).Create), arg0, arg1)
}

// Delete mocks base method.
func (m *MockTaskDAO) Delete(arg0 context.Context, arg1 int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockTaskDAOMockRecorder) Delete(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockTaskDAO)(nil).Delete), arg0, arg1)
}

// List mocks base method.
func (m *MockTaskDAO) List(arg0 context.Context) ([]*model.Task, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", arg0)
	ret0, _ := ret[0].([]*model.Task)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List.
func (mr *MockTaskDAOMockRecorder) List(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockTaskDAO)(nil).List), arg0)
}

// Update mocks base method.
func (m *MockTaskDAO) Update(arg0 context.Context, arg1 *model.Task) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update.
func (mr *MockTaskDAOMockRecorder) Update(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockTaskDAO)(nil).Update), arg0, arg1)
}
